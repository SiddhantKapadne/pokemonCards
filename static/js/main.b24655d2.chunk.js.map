{"version":3,"sources":["services/pokemonService.js","PokeCard.js","App.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","axios","get","then","resp","data","catch","error","alert","getPokemon","Tilt","props","options","rest","tilt","useRef","useEffect","VanillaTilt","init","current","ref","PokeCard","pokemon","pokeImage","sprites","other","front_default","pokeType","types","type","name","pokeHeight","height","pokeWeight","weight","pokeAblity","abilities","ability","pokemonName","pokemonNumber","id","Grid","item","md","sm","xs","className","scale","max","speed","glare","src","alt","map","App","useState","pokemonData","setPokemonData","search","setSearch","response","loadingPokemon","results","fetchPokemon","all","pokemonRecord","_pokemonData","filteredPokemon","filter","toLowerCase","includes","onChange","e","target","value","placeholder","container","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b24655d2.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function getAllPokemon(url) {\n    return new Promise((resolve, reject) => {\n        axios.get(url)\n        .then((resp) => {\n            resolve(resp.data);\n        })\n        .catch((error) => {\n          alert('Something went Wrong Try again later');\n        })\n    })\n}\n\nexport async function getPokemon(url) {\n    return new Promise((resolve, reject) => {\n        axios.get(url)\n            .then(data => {\n                resolve(data);\n                // console.log(data);\n            })\n            .catch((error) => {\n                alert('Something went Wrong Try again later');\n            });\n    });\n}","import { Grid } from '@material-ui/core';\nimport React, { useEffect, useRef } from 'react';\nimport VanillaTilt from 'vanilla-tilt';\n\nfunction Tilt(props) {\n    const { options, ...rest } = props;\n    const tilt = useRef(null);\n  \n    useEffect(() => {\n      VanillaTilt.init(tilt.current, options);\n    }, [options]);\n  \n    return <div ref={tilt} {...rest} />;\n  }\n\nconst PokeCard = ({ pokemon }) => {\n\n    const pokeImage = pokemon.data.sprites.other[\"official-artwork\"].front_default;\n    const pokeType = pokemon.data.types[0].type.name;\n    const pokeHeight = pokemon.data.height;\n    const pokeWeight = pokemon.data.weight;\n    const pokeAblity = pokemon.data.abilities[0].ability.name;\n    const pokemonName = pokemon.data.name;\n    const pokemonNumber = pokemon.data.id;\n\n    const options = { scale: 1.1, max: 35, speed: 300, glare: true, \"max-glare\": 0.5 };\n\n    return(\n            <Grid item md={4} sm={6} xs={10} className=\"glassCard\">\n                {/* <h2 className=\"colorNumber\">{pokemonNumber}</h2> */}\n                <div>{  \n                        pokeType === 'grass' ? <div className=\"grassColor\"></div> : \n                        pokeType === 'fire' ? <div className=\"fireColor\"></div> :\n                        pokeType === 'ice' ? <div className=\"iceColor\"></div> : \n                        pokeType === 'bug' ? <div className=\"bugColor\"></div> :\n                        pokeType === 'normal' ? <div className=\"normalColor\"></div> :\n                        pokeType === 'poison' ? <div className=\"poisonColor\"></div> : \n                        pokeType === 'electric' ? <div className=\"electricColor\"></div> : \n                        pokeType === 'ground' ? <div className=\"groundColor\"></div> : \n                        pokeType === 'fairy' ? <div className=\"fairyColor\"></div> : \n                        pokeType === 'psychic' ? <div className=\"psychicColor\"></div> : \n                        pokeType === 'fighting' ? <div className=\"fightingColor\"></div> : \n                        pokeType === 'rock' ? <div className=\"rockColor\"></div> : \n                        pokeType === 'water' ? <div className=\"waterColor\"></div> : \n                        pokeType === 'ghost' ? <div className=\"ghostColor\"></div> : \n                        <div className=\"whiteColor\"></div>\n                }</div>\n                           <Tilt options={options} className=\"glassEffect\">\n                             <div className=\"threeD\">\n                                <p className=\"pokeNum\">#{pokemonNumber}</p>\n                                <img className=\"pokeImg\" src={pokeImage} alt=\"pokeImg\" /> \n                                <h1 className=\"pokeName\">{pokemonName}</h1>\n                                <div className=\"pokeInfo\">\n                                    <p>Height: {pokeHeight}</p>\n                                    <p>Weight: {pokeWeight}</p>\n                                </div>\n                                <div>\n                                  {pokemon.data.types.map(type => {\n                                    return(\n                                      <div className=\"TypeArea\">\n                                        {\n                                          type.type.name === 'grass' ? <div className=\"grassText\">{type.type.name}</div> : \n                                          type.type.name === 'fire' ? <div className=\"fireText\">{type.type.name}</div> :\n                                          type.type.name === 'ice' ? <div className=\"iceText\">{type.type.name}</div> : \n                                          type.type.name === 'bug' ? <div className=\"bugText\">{type.type.name}</div> :\n                                          type.type.name === 'normal' ? <div className=\"normalText\">{type.type.name}</div> :\n                                          type.type.name === 'poison' ? <div className=\"poisonText\">{type.type.name}</div> : \n                                          type.type.name === 'electric' ? <div className=\"electricText\">{type.type.name}</div> : \n                                          type.type.name === 'ground' ? <div className=\"groundText\">{type.type.name}</div> : \n                                          type.type.name === 'fairy' ? <div className=\"fairyText\">{type.type.name}</div> : \n                                          type.type.name === 'psychic' ? <div className=\"psychicText\">{type.type.name}</div> : \n                                          type.type.name === 'fighting' ? <div className=\"fightingText\">{type.type.name}</div> : \n                                          type.type.name === 'rock' ? <div className=\"rockText\">{type.type.name}</div> : \n                                          type.type.name === 'water' ? <div className=\"waterText\">{type.type.name}</div> : \n                                          type.type.name === 'ghost' ? <div className=\"ghostText\">{type.type.name}</div> : \n                                            <div className=\"TypeText\"></div>\n                                        }\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                                    {/* <h4>{pokeType === 'grass' ? <div className=\"grassText\">{pokeType}{pokeType}</div> : \n                                            pokeType === 'fire' ? <div className=\"fireText\">{pokeType}</div> :\n                                            pokeType === 'ice' ? <div className=\"iceText\">{pokeType}</div> : \n                                            pokeType === 'bug' ? <div className=\"bugText\">{pokeType}</div> :\n                                            pokeType === 'normal' ? <div className=\"normalText\">{pokeType}</div> :\n                                            pokeType === 'poison' ? <div className=\"poisonText\">{pokeType}</div> : \n                                            pokeType === 'electric' ? <div className=\"electricText\">{pokeType}</div> : \n                                            pokeType === 'ground' ? <div className=\"groundText\">{pokeType}</div> : \n                                            pokeType === 'fairy' ? <div className=\"fairyText\">{pokeType}</div> : \n                                            pokeType === 'psychic' ? <div className=\"psychicText\">{pokeType}</div> : \n                                            pokeType === 'fighting' ? <div className=\"fightingText\">{pokeType}</div> : \n                                            pokeType === 'rock' ? <div className=\"rockText\">{pokeType}</div> : \n                                            pokeType === 'water' ? <div className=\"waterText\">{pokeType}</div> : \n                                            pokeType === 'ghost' ? <div className=\"ghostText\">{pokeType}</div> : \n                                            <div className=\"TypeText\"></div>\n                                        }</h4> */}\n\n                                        <h4 className=\"pokeAb\">{pokeAblity}</h4>\n                            </div>\n                        </Tilt>\n            </Grid>\n    );\n}\n\nexport default PokeCard;","import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport  { getAllPokemon, getPokemon }  from './services/pokemonService';\nimport PokeCard from './PokeCard';\n// import NavigateNextIcon from '@material-ui/icons/NavigateNext';\n// import NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport './App.css';\n\nconst App = () => {\n  const [pokemonData, setPokemonData] = useState([]);\n  // const [nextUrl, setNextUrl] = useState('');\n  // const [prevUrl, setPrevUrl] = useState('');\n  // const [pokeInfo, setPokeInfo] = useState([]);\n  const [search, setSearch] = useState('');\n  const initalUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n  // To fetch the Api data from service\n  useEffect(() => {\n      const fetchPokemon = async () => {\n        let response = await getAllPokemon(initalUrl);\n        // setNextUrl(response.next);\n        // setPrevUrl(response.previous);\n        await loadingPokemon(response.results);\n      }\n      fetchPokemon();\n  }, []);\n\n  // // Next set of cards \n  // const next = async () => {\n  //   let data = await getAllPokemon(nextUrl)\n  //   await loadingPokemon(data.results);\n  //   setNextUrl(data.next);\n  //   setPrevUrl(data.previous);\n  // }\n\n  // // Previous set of cards \n  // const prev = async () => {\n  //   if(!prevUrl) return;\n  //   let data = await getAllPokemon(prevUrl)\n  //   await loadingPokemon(data.results);\n  //   setNextUrl(data.next);\n  //   setPrevUrl(data.previous);\n  // }\n\n  // Fetch Other End Poit data and combine that in useState pokemonData\n  const loadingPokemon = async (data) => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n        let pokemonRecord = await getPokemon(pokemon.url);\n        return pokemonRecord;\n    }))\n    setPokemonData(_pokemonData);\n  }\n\n  // Handle search\n  const handleChange = e => {\n    setSearch(e.target.value);\n  }\n\n  // filter the data and Search data\n  const filteredPokemon = pokemonData.filter(pokemon => \n    pokemon.data.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n    <section className=\"search-section\">\n      <form>\n        <input className=\"search-pokemon\" onChange={handleChange} placeholder=\"Search\" />\n      </form>\n    </section>\n    <section className=\"card-Area\">\n    \n        <Grid container className=\"mainGrid\">\n          {filteredPokemon.map((pokemon, i) => {\n            return(\n              <PokeCard \n                pokemon={pokemon}\n                key={i}\n              />\n            );\n          })}\n          {/* <Grid item xs={12}>\n            <button onClick={prev}><NavigateBeforeIcon /></button>\n            <button onClick={next}><NavigateNextIcon /></button>\n          </Grid> */}\n        </Grid>\n    </section>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}